@startuml

title __LAUNCHER's Class Diagram__\n

  namespace fr.rphstudio.chess.launcher {
    class fr.rphstudio.chess.launcher.ChessFontManager {
        {static} - CHAR_DELTA : int
        - font : SpriteSheet
        - letters : LetterInfo[]
        + ChessFontManager()
        + displayString()
    }
  }
  

  namespace fr.rphstudio.chess.launcher {
    class fr.rphstudio.chess.launcher.ChessFontManager.LetterInfo {
        - letter : char
        - x : int
        - y : int
        - LetterInfo()
    }
  }
  

  namespace fr.rphstudio.chess.launcher {
    class fr.rphstudio.chess.launcher.ChessGameController {
        {static} - STATE_END : int
        {static} - STATE_PLAY : int
        {static} - STATE_REINIT : int
        {static} - STATE_SELECT : int
        - backGfx : Image
        - boardGfx : Image
        - container : GameContainer
        - highlightColor : Color
        - highlightGfx : Image
        - isUndoRequest : boolean
        - kingStateB : String
        - kingStateW : String
        - offBoardY : int
        - offCellX : int
        - offCellY : int
        - offX : int
        - offY : int
        - pieceGfx : SpriteSheet
        - possibleColor : Color
        - possiblePos : List<ChessPosition>
        - quitGfx : Image
        - refX : int
        - refY : int
        - restartGfx : Image
        - selectChoice : List<ChessPosition>
        - selectGfx : Image
        - selectedColor : Color
        - state : int
        - undoGfx : Image
        - version : String
        + ChessGameController()
        + getID()
        + init()
        + keyPressed()
        + render()
        + update()
        - displayPlayerInfo()
        - drawHighlight()
        - drawImage()
        - drawPossible()
        - drawSelect()
        - getCellPosition()
        - getFormattedTime()
        - getPerspectivePosition()
        - getRealPosition()
        - getVersion()
        - handleStateGames()
        - reinit()
    }
  }
  

  namespace fr.rphstudio.chess.launcher {
    class fr.rphstudio.chess.launcher.MainLauncher {
        {static} + HEIGHT : int
        {static} + OFFSET_X : float
        {static} + OFFSET_Y : float
        {static} + RATIO_XY : float
        {static} + WIDTH : int
        + MainLauncher()
        {static} + fitScreen()
        + initStatesList()
        {static} + main()
    }
  }
  

  fr.rphstudio.chess.launcher.ChessFontManager +-down- fr.rphstudio.chess.launcher.ChessFontManager.LetterInfo
  fr.rphstudio.chess.launcher.ChessGameController -up-|> org.newdawn.slick.state.BasicGameState
  fr.rphstudio.chess.launcher.ChessGameController o-- fr.rphstudio.chess.interf.IChess : board
  fr.rphstudio.chess.launcher.ChessGameController o-- fr.rphstudio.chess.launcher.ChessFontManager : chessFont
  fr.rphstudio.chess.launcher.ChessGameController o-- fr.rphstudio.chess.interf.IChess.ChessColor : currentColor
  fr.rphstudio.chess.launcher.ChessGameController o-- fr.rphstudio.chess.interf.IChess.ChessPosition : selectPos
  fr.rphstudio.chess.launcher.MainLauncher -up-|> org.newdawn.slick.state.StateBasedGame


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
